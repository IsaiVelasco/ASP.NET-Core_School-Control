// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RafaelReyesSpindola.Data;

namespace RafaelReyesSpindola.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("RafaelReyesSpindola.Models.Alergia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClasificacionAlergiaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstudianteID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClasificacionAlergiaID");

                    b.HasIndex("EstudianteID");

                    b.ToTable("Alergia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.AlergiaEstudiante", b =>
                {
                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<int>("AlergiaID")
                        .HasColumnType("int");

                    b.HasKey("EstudianteID", "AlergiaID");

                    b.HasIndex("AlergiaID");

                    b.ToTable("AlergiaEstudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Caja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("MontoEfectivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Caja");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Calificacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CicloEscolarID")
                        .HasColumnType("int");

                    b.Property<int>("DocenteID")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<int>("MateriaID")
                        .HasColumnType("int");

                    b.Property<int>("PeriodoEvaliacion")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CicloEscolarID");

                    b.HasIndex("DocenteID");

                    b.HasIndex("EstudianteID");

                    b.HasIndex("MateriaID");

                    b.ToTable("Calificacion");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.CicloEscolar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CicloEscolar");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ClasificacionAlergia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreClasificacionAlergia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ClasificacionAlergia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ConceptoPago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tarifa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("ConceptoPago");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.CorteDeCaja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("B100")
                        .HasColumnType("int");

                    b.Property<int>("B1000")
                        .HasColumnType("int");

                    b.Property<int>("B20")
                        .HasColumnType("int");

                    b.Property<int>("B200")
                        .HasColumnType("int");

                    b.Property<int>("B50")
                        .HasColumnType("int");

                    b.Property<int>("B500")
                        .HasColumnType("int");

                    b.Property<int>("C10")
                        .HasColumnType("int");

                    b.Property<int>("C20")
                        .HasColumnType("int");

                    b.Property<int>("C50")
                        .HasColumnType("int");

                    b.Property<int>("CajaID")
                        .HasColumnType("int");

                    b.Property<decimal>("Calculado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Contado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Diferencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("M1")
                        .HasColumnType("int");

                    b.Property<int>("M10")
                        .HasColumnType("int");

                    b.Property<int>("M2")
                        .HasColumnType("int");

                    b.Property<int>("M5")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CajaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("CorteDeCaja");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.DocenteImparteMateria", b =>
                {
                    b.Property<int>("DocenteID")
                        .HasColumnType("int");

                    b.Property<int>("MateriaID")
                        .HasColumnType("int");

                    b.HasKey("DocenteID", "MateriaID");

                    b.HasIndex("MateriaID");

                    b.ToTable("DocenteImparteMateria");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Enfermedad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Enfermedad");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.EnfermedadEstudiante", b =>
                {
                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<int>("EnfermedadID")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionTratamiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstudianteID", "EnfermedadID");

                    b.HasIndex("EnfermedadID");

                    b.ToTable("EnfermedadEstudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Escolaridad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Escolaridad");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.EscuelaProcedencia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("EscuelaProcedencia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.FilaHorario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DiaCinco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaCuatro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaDos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaSeis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaSiete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaTres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaUno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GrupoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GrupoID");

                    b.HasIndex("HorarioID");

                    b.ToTable("FilaHorario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Grado", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Grado");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Grupo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GradoID")
                        .HasColumnType("int");

                    b.Property<string>("NombreGrupo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("GradoID");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Horario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GrupoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GrupoID");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Inscripcion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CicloEscolarID")
                        .HasColumnType("int");

                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradoID")
                        .HasColumnType("int");

                    b.Property<int>("GrupoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CicloEscolarID");

                    b.HasIndex("EstudianteID");

                    b.HasIndex("GradoID");

                    b.HasIndex("GrupoID");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ListaConceptos", b =>
                {
                    b.Property<int>("PagoID")
                        .HasColumnType("int");

                    b.Property<int>("ConceptoPagoID")
                        .HasColumnType("int");

                    b.HasKey("PagoID", "ConceptoPagoID");

                    b.HasIndex("ConceptoPagoID");

                    b.ToTable("ListaConceptos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Materia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GradoID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMateriaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GradoID");

                    b.HasIndex("TipoMateriaID");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Movimiento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CajaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoMovimiento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CajaID");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Pago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstudianteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontoPagado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoRestante")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Recargo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPagar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EstudianteID");

                    b.HasIndex("TutorID");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Persona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("ID");

                    b.ToTable("Persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Rol", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.RolesDeUsuarios", b =>
                {
                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("RolID", "UsuarioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("RolesDeUsuarios");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.TipoMateria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoMateria");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.TipoSangre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("TipoSangre");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Docente", b =>
                {
                    b.HasBaseType("RafaelReyesSpindola.Models.Persona");

                    b.Property<string>("Profesion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Estudiante", b =>
                {
                    b.HasBaseType("RafaelReyesSpindola.Models.Persona");

                    b.Property<string>("Enfermedades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscuelaProcedenciaID")
                        .HasColumnType("int");

                    b.Property<string>("ParentescoTutor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PromedioProcedencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoSangreID")
                        .HasColumnType("int");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasIndex("EscuelaProcedenciaID");

                    b.HasIndex("TipoSangreID");

                    b.HasIndex("TutorID");

                    b.HasDiscriminator().HasValue("Estudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Tutor", b =>
                {
                    b.HasBaseType("RafaelReyesSpindola.Models.Persona");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EscolaridadID")
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCasa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCelular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoTrabajo")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("EscolaridadID");

                    b.HasDiscriminator().HasValue("Tutor");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Usuario", b =>
                {
                    b.HasBaseType("RafaelReyesSpindola.Models.Persona");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sal")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Alergia", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.ClasificacionAlergia", "ClasificacionAlergia")
                        .WithMany("Alergias")
                        .HasForeignKey("ClasificacionAlergiaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", null)
                        .WithMany("AlergiasEstudiante")
                        .HasForeignKey("EstudianteID");

                    b.Navigation("ClasificacionAlergia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.AlergiaEstudiante", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Alergia", "Alergia")
                        .WithMany()
                        .HasForeignKey("AlergiaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alergia");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Caja", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Calificacion", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.CicloEscolar", "CicloEscolar")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CicloEscolarID");

                    b.HasOne("RafaelReyesSpindola.Models.Docente", "Docente")
                        .WithMany("Calificaciones")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", "Estudiante")
                        .WithMany("Calificaciones")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Materia", "Materia")
                        .WithMany("Calificaciones")
                        .HasForeignKey("MateriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CicloEscolar");

                    b.Navigation("Docente");

                    b.Navigation("Estudiante");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.CorteDeCaja", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("CajaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.DocenteImparteMateria", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Docente", "Docente")
                        .WithMany("DocenteImparteMaterias")
                        .HasForeignKey("DocenteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.EnfermedadEstudiante", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Enfermedad", "Enfermedad")
                        .WithMany()
                        .HasForeignKey("EnfermedadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", "Estudiante")
                        .WithMany("EnfermedadesEstudiante")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enfermedad");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.FilaHorario", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Grupo", null)
                        .WithMany("FilasHorarios")
                        .HasForeignKey("GrupoID");

                    b.HasOne("RafaelReyesSpindola.Models.Horario", "Horario")
                        .WithMany("FilasHorarios")
                        .HasForeignKey("HorarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Grupo", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Grado", "Grado")
                        .WithMany("Grupos")
                        .HasForeignKey("GradoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Horario", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Inscripcion", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.CicloEscolar", "CicloEscolar")
                        .WithMany()
                        .HasForeignKey("CicloEscolarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", "Estudiante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Grado", "Grado")
                        .WithMany("Inscripciones")
                        .HasForeignKey("GradoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CicloEscolar");

                    b.Navigation("Estudiante");

                    b.Navigation("Grado");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ListaConceptos", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.ConceptoPago", "ConceptoPago")
                        .WithMany("ListaConceptos")
                        .HasForeignKey("ConceptoPagoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Pago", "Pago")
                        .WithMany("ListaConceptos")
                        .HasForeignKey("PagoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConceptoPago");

                    b.Navigation("Pago");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Materia", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Grado", "Grado")
                        .WithMany("Materias")
                        .HasForeignKey("GradoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.TipoMateria", "TipoMateria")
                        .WithMany()
                        .HasForeignKey("TipoMateriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");

                    b.Navigation("TipoMateria");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Movimiento", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Caja", "Caja")
                        .WithMany("Movimientos")
                        .HasForeignKey("CajaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Pago", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Estudiante", "Estudiante")
                        .WithMany("Pagos")
                        .HasForeignKey("EstudianteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Tutor", null)
                        .WithMany("Pagos")
                        .HasForeignKey("TutorID");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Rol", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Usuario", null)
                        .WithMany("Roles")
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.RolesDeUsuarios", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Estudiante", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.EscuelaProcedencia", "EscuelaProcedencia")
                        .WithMany()
                        .HasForeignKey("EscuelaProcedenciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.TipoSangre", "TipoSangre")
                        .WithMany()
                        .HasForeignKey("TipoSangreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RafaelReyesSpindola.Models.Tutor", "Tutor")
                        .WithMany("Estudiantes")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EscuelaProcedencia");

                    b.Navigation("TipoSangre");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Tutor", b =>
                {
                    b.HasOne("RafaelReyesSpindola.Models.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escolaridad");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Caja", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.CicloEscolar", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ClasificacionAlergia", b =>
                {
                    b.Navigation("Alergias");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.ConceptoPago", b =>
                {
                    b.Navigation("ListaConceptos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Grado", b =>
                {
                    b.Navigation("Grupos");

                    b.Navigation("Inscripciones");

                    b.Navigation("Materias");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Grupo", b =>
                {
                    b.Navigation("FilasHorarios");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Horario", b =>
                {
                    b.Navigation("FilasHorarios");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Materia", b =>
                {
                    b.Navigation("Calificaciones");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Pago", b =>
                {
                    b.Navigation("ListaConceptos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Docente", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("DocenteImparteMaterias");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Estudiante", b =>
                {
                    b.Navigation("AlergiasEstudiante");

                    b.Navigation("Calificaciones");

                    b.Navigation("EnfermedadesEstudiante");

                    b.Navigation("Inscripciones");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Tutor", b =>
                {
                    b.Navigation("Estudiantes");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("RafaelReyesSpindola.Models.Usuario", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
