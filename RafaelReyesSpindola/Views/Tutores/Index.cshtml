@model PaginatedList<RafaelReyesSpindola.Models.Tutor>
@{
    ViewData["Title"] = "Index";
}

<h1>Tutores</h1>

<p>
    <a asp-action="Create">Crear Nuevo</a>
</p>
<form asp-action="Index" method="get" class="form-inline alert alert-info" style="padding-bottom:4px;">

    <div class="form-group mx-sm-3 mb-2">
        <label>Buscar tutores:</label>
    </div>
    <div class="form-group mb-2">
        <input class="form-control form-control-sm" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <input type="submit" value="Buscar" class="btn btn-success btn-sm" />
    </div>
    <div class="form-group mx-sm-3 mb-2">
        <a asp-action="Index">Volver a la lista completa</a>
    </div>

</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Matrícula
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NomParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre Completo</a>
            </th>            
            <th>
                Ocupación
            </th>
            <th>
                Teléfono Celular
            </th>
            <th>
                Edad
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            DateTime nacimiento = item.FechaNacimiento;
            int edad = DateTime.Today.AddTicks(-nacimiento.Ticks).Year - 1;
            if (item.Edad != edad)
            {
                item.Edad = edad;
            }
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Matricula)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NombreCompleto)
                </td>               
                <td>
                    @Html.DisplayFor(modelItem => item.Ocupacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TelefonoCelular)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Edad)
                </td>
                <td>
                    <div class="row">
                        <a class="col" asp-action="Details" asp-route-id="@item.ID">
                            <div class="sb-nav-link-icon"><i class="fas fa-eye" style="color: #007BFF"></i></div>
                        </a>
                        <a class="col" asp-action="Edit" asp-route-id="@item.ID">
                            <div class="sb-nav-link-icon"><i class="fas fa-user-edit" style="color: #FF9900"></i></div>
                        </a>
                        <a class="col" asp-action="Delete" asp-route-id="@item.ID">
                            <div class="sb-nav-link-icon"><i class="fas fa-user-times" style="color: #E94235"></i></div>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>